---
- name: Ubuntu-16 | Create directories
  file:
   path: "{{ item }}"
   state: directory
   mode: 0755
  with_items:
   - /etc/supervisor
   - /etc/supervisor/conf.d
   - /var/log/supervisor

- name: Ubuntu-16 | Install python-setuptools
  apt:
   name: python-setuptools
   state: latest
   update_cache: yes

- name: Ubuntu-16 | Install supervisor
  easy_install:
   name: supervisor
   state: present

- block:
  - name: Ubuntu-16 | Display supervisord.conf src location if defined
    debug:
     msg: "path {{ supervisor_conf }}"

  - name: Ubuntu-16 | Copy supervisor main config to /etc/supervisor/supervisord.conf
    template:
     src: "{{ supervisor_conf }}"
     dest: /etc/supervisor/supervisord.conf
    register: supervisor_cfg_file
  when: supervisor_conf is defined


- block:
  - name: Ubuntu-16 | Debug print supervisor_conf_d path
    debug: var=supervisor_conf_d

  - name: Ubuntu-16 | Copy config files to conf.d on remote
    template:
      src: "{{ item }}"
      dest: /etc/supervisor/conf.d/{{ item | basename }}
      owner: root
      group: root
      mode: 0440
    with_fileglob:
      - "{{ supervisor_conf_d }}/*.conf"
    register: conf_d_files

  - name: Ubuntu-16 | supervisorctl reread and update config
    shell: supervisorctl reread && supervisorctl update
    when: conf_d_files|changed

  when: supervisor_conf_d is defined
  # EOF Block


- name: Ubuntu-16 | copy systemd supervisor.service config
  template:
   src: Ubuntu-16/systemd/supervisor.service.j2
   dest: /lib/systemd/system/supervisor.service
   mode: 0644
   owner: root
   group: root
  register: supervisor_service_cfg


- name: Ubuntu-16 | systemctl daemon-reload if service unit is changed
  systemd:
    daemon_reload: yes
  when: supervisor_service_cfg|changed


- name: Ubuntu-16 | reload supervisor service
  systemd:
    name: supervisor
    state: reloaded
  when: supervisor_cfg_file|changed


- name: Ubuntu-16 | enable supervisor and make sure started
  systemd:
    name: supervisor
    state: started
    enabled: True
